  Colditz Escape - Rewritten Engine for "Escape From Colditz"


WINDOWS (Visual Studio 2022):
=============================

If running Windows 8 or later, you shouldn't have to install anything special.

If not running Windows 8 or later, you will need to download and install the
latest DirectX SDK, which should be listed at:
  https://www.microsoft.com/en-us/download/details.aspx?id=6812
This provides:
- X2Audio libs: X3DAudio.lib (as well as xaudio2.h)
- DirectShow movie player lib: strmiids.lib

Make sure the relevant directories for DX and the Windows SDK are set in
Tools -> Options -> Projects and Solutions -> VC++ Directories

Optional
- You can update the GLSL zoom shader(s), with the static version of the Glew
  library from: https://glew.sourceforge.net/

LINUX (gcc)
===========

Make sure you have gcc and the following packages installed:
  libgl1-mesa-dev libglu1-mesa-dev libxmu-dev libxi-dev libglew-dev libexpat1-dev libasound2-dev
Then run:
  make release

OSX (Xcode)
===========

You should have XCode, XQuartz (which you can download from https://www.xquartz.org/)
and GLEW installed. For XBox 360 Controller support, you should also install the latest
360Controller package from https://github.com/360Controller/360Controller/releases.
Note that if needed, you can install GLEW by running the following:
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" < /dev/null 2> /dev/null
  brew install glew
Once you have the prerequisites, simply run:
  make release

DIRECTORY STRUCTURE AND FILE DESCRIPTION:
=========================================

src/
  +--- .vs/                      [Visual Studio 2022 project files]
  +--- Colditz Escape/           [Runtime binaries]
        +--- SHADERS/            Various zoom OpenGL shaders
        +--- CORNER.RAW          16 bit GRAB raw image for the picture corner
        +--- PANELBASE1.RAW      16 bit GRAB raw image for the panel, part 1
        +--- PANELBASE2.RAW      16 bit GRAB raw image for the panel, part 2
        +--- STARTSCREEN2-PSP    IFF detailing the controls for the PSP
        +--- TUNNELVISION.RAW    16 bit GRAB raw image for the tunnel shadows
        +--- (...)               Original Amiga files
  +--- docs/                     [Documentation, licenses and additional files]
  +--- freeglut/                 [A *MODIFIED* version of FreeGLUT]
  +--- GL/                       [FreeGLUT and GL headers]
  +--- libs/                     [Additional libraries required for compilation]
        +--- glew32s.lib         Static win32 version of the Glew library (v1.5.1)
  +--- linux/                    [Linux specific sourcefiles]
        +--- audio_backend.c     ALSA-based audio backend implementation
  +--- osx/                      [OSX specific sourcefiles]
        +--- audio_backend.c     Core Audio backend implementation
  +--- psp/                      [PSP specific sourcefiles]
        +--- audio_backend.c     PSP audio backend implementation
        +--- icon.png            PSP EBOOT icon
        +--- pic1.png            PSP EBOOT screen
        +--- printf.h            Custom onscreen printf for the PSP
        +--- setup.c             Standard PSP callbacks initialization
        +--- setup.h                 "           "           "
  +--- windows/                  [Windows specific sourcefiles]
        +--- audio_backend.c     XAudio2-based audio backend implementation
        +--- unisdt.h            A dummy unisdt.h to keep ndevilla's iniparser happy
  +--- anti-tampering.h          MD5sums and inline checking of the data files
  +--- CHANGELOG.txt             Change Log
  +--- cluck.h                   Additional (non ORG) SFXs
  +--- colditz.h                 Main constants and structures definition
  +--- colditz.ico               Windows game icon
  +--- colditz.rc                Windows resource file
  +--- colditz.sln               Visual Studio 2022 Solution file
  +--- COMPILING.txt             This file
  +--- conf.c                    Wrapper for the config.ini file with
  +--- conf.h                      declarations for options and key mappings
  +--- dictionary.c              Ini file handling, taken from:
  +--- dictionary.h                https://github.com/ndevilla/iniparser
  +--- game.c                    Game runtime subroutines
  +--- game.h                    Game runtime header, with some inline functions
  +--- getopt.c                  GNU Getopt for commandline options processing
  +--- getopt.h                      "           "           "
  +--- getopt_int.h                  "           "           "
  +--- gettext.h                     "           "           "
  +--- graphics.c                Game Graphics runtime subroutines
  +--- graphics.h                Game Graphics runtime header
  +--- iniparser.c               Ini file handling, taken from:
  +--- iniparser.h                 https://github.com/ndevilla/iniparser
  +--- LICENSING.txt             Licensing notes
  +--- low-level.c               Low level functions, with files decompression
  +--- low-level.h                 and bit/byte manipulations
  +--- main.c                    Top level program, including GLUT functions
  +--- Makefile                  Dispatch Makefile
  +--- Makefile.linux            Linux Makefile
  +--- Makefile.osx              OSX Makefile
  +--- Makefile.psp              PSP Makefile
  +--- md5.c                     MD5 checksum functions
  +--- md5.h                         "           "
  +--- soundplayer.c             MOD + SFX wrapper & player
  +--- soundplayer.h                 "           "
  +--- soundtables.h                 "           "
